name: docker publish
on:
  push:
    tags:
      - '*'
jobs:
  docker-build:
    runs-on: ubuntu-latest
    timeout-minutes: 720
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: setup qemu
        uses: docker/setup-qemu-action@v2
      - name: setup buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: print available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: set version from tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: print version number
        run: echo ${{ env.RELEASE_VERSION }}
      - name: login to dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_UPLOAD_USERNAME }}
          password: ${{ secrets.DOCKER_UPLOAD_TOKEN }}
      - name: build linux/amd64
        run: docker buildx build --platform linux/amd64 -t plattar/python-usd:version-${{ env.RELEASE_VERSION }}-amd64 .
      - name: build linux/arm64
        run: docker buildx build --platform linux/arm64 -t plattar/python-usd:version-${{ env.RELEASE_VERSION }}-arm64 .
      - name: upload linux/amd64
        run: docker push plattar/python-usd:version-${{ env.RELEASE_VERSION }}-amd64
      - name: upload linux/arm64
        run: docker push plattar/python-usd:version-${{ env.RELEASE_VERSION }}-arm64
      - name: create manifest
        run: docker manifest create plattar/python-usd:version-${{ env.RELEASE_VERSION }} plattar/python-usd:version-${{ env.RELEASE_VERSION }}-amd64 plattar/python-usd:version-${{ env.RELEASE_VERSION }}-arm64
      - name: upload manifest
        run: docker manifest push  plattar/python-usd:version-${{ env.RELEASE_VERSION }}